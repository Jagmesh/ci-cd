name: Go Docker Deploy

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        required: true
        type: string
      CONTAINER_NAME:
        required: true
        type: string
      PORTS:
        required: false
        type: string
      ENVARS:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      REGISTRY_HOST:
        required: true
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true
      SSH_KEY:
        required: true

env:
  IMAGE_TAG: latest

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest

    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker login ${{ secrets.REGISTRY_HOST }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ inputs.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker stop ${{ inputs.CONTAINER_NAME }} || true
            docker rm ${{ inputs.CONTAINER_NAME }} || true

            PORT_MAPPING=""
            if [ ! -z "${{ inputs.PORT }}" ]; then
              PORT_MAPPING="-p ${{ inputs.PORT }}"
            fi

            ENV_VARS=""
            if [ ! -z "${{ inputs.ENVARS }}" ]; then
              IFS=',' read -ra PAIRS <<< "${{ inputs.ENVARS }}"
              for pair in "${PAIRS[@]}"; do
                ENV_VARS+="--env $pair "
              done
            fi
  
            docker run -d --name ${{ inputs.CONTAINER_NAME }} $PORT_MAPPING $ENV_VARS ${{ inputs.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
